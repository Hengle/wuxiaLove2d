---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by apple.
--- DateTime: 2018/10/6 下午3:18
---

Color={}
Color.CLEAR = { 0, 0, 0, 0 };
Color.BLACK = { 0, 0, 0, 1 };
Color.BLUE = { 0, 0, 1, 1 };
Color.NAVY = { 0, 0, 128, 1 };
Color.CYAN = { 0, 1, 1, 1 };
Color.TEAL = { 0, 128, 128, 1 };
Color.WHITE = { 1, 1, 1, 1 };
Color.LIGHT_GRAY = { 0xbf, 0xbf, 0xbf, 1 };
Color.GRAY = { 0x7f, 0x7f, 0x7f, 1 };
Color.DARK_GRAY = { 0x3f, 0x3f, 0x3f, 1 };
Color.SLATE = { 0x70, 0x80, 0x90, 1 };
Color.ROYAL = { 0x41, 0x69, 0xe1, 1 };
Color.SKY = { 0x87, 0xce, 0xeb, 1 };
Color.GREEN = { 0x00, 1, 0x00, 1 };
Color.CHARTREUSE = { 0x7f, 1, 0x00, 1 };
Color.LIME = { 0x32, 0xcd, 0x32, 1 };
Color.FOREST = { 0x22, 0x8b, 0x22, 1 };
Color.OLIVE = { 0x6b, 0x8e, 0x23, 1 };
Color.YELLOW = { 1, 1, 0x00, 1 };
Color.GOLD = { 1, 0xd7, 0x00, 1 };
Color.GOLDENROD = { 0xda, 0xa5, 0x20, 1 };
Color.SCARLET = { 1, 0x34, 0x1c, 1 };
Color.BROWN = { 0x8b, 0x45, 0x13, 1 };
Color.TAN = { 0xd2, 0xb4, 0x8c, 1 };
Color.FIREBRICK = { 0xb2, 0x22, 0x22, 1 };
Color.RED = { 1, 0x00, 0x00, 1 };
Color.ORANGE = { 1, 0xa5, 0x00, 1 };
Color.CORAL = { 1, 0x7f, 0x50, 1 };
Color.SALMON = { 0xfa, 0x80, 0x72, 1 };
Color.PINK = { 1, 0x69, 0xb4, 1 };
Color.PURPLE = { 0xa0, 0x20, 0xf0, 1 };
Color.VIOLET = { 0xee, 0x82, 0xee, 1 };
Color.MAROON = { 0xb0, 0x30, 0x60, 1 };
Color.MAGENTA = { 1, 0, 1, 1 };
Color["透明"] = {0, 0, 0, 0};
Color["黑色"] = {0, 0, 0, 1};
Color["白色"] = {1,1,1,1};
Color["浅灰"] = {0xbf/255,0xbf/255,0xbf/255,1};
Color["灰色"] = {0x7f/255,0x7f/255,0x7f/255,1};
Color["深灰"] = {0x3f/255,0x3f/255,0x3f/255,1};
Color["蓝色"] = {0, 0, 1, 1};
Color["深蓝"] = {0,0,128/255,1};
Color["浅蓝"] = {0x41/255,0x69/255,0xe1/255,1};
Color["蓝灰"] = {0x70/255,0x80/255,0x90/255,1};
Color["天蓝"] = {0x87/255,0xce/255,0xeb/255,1};
Color["蓝绿"] = {0, 1, 1, 1};
Color["青色"] = {0,128/255,128/255,1};
Color["绿色"] = {0x00/255,1,0x00/255,1};
Color["黄绿"] = {0x7f/255,1,0x00/255,1};
Color["青柠"] = {0x32/255,0xcd/255,0x32/255,1};
Color["森林"] = {0x22/255,0x8b/255,0x22/255,1};
Color["橄榄"] = {0x6b/255,0x8e/255,0x23/255,1};
Color["黄色"] = {1,1,0,1};
Color["金色"] = {1,0xd7/255,0,1};
Color["橘黄"] = {0xda/255,0xa5/255,0x20/255,1};
Color["橙色"] = {1,0xa5/255,0,1};
Color["棕色"] = {0x8b/255,0x45/255,0x13/255,1};
Color["棕灰"] = {0xd2/255,0xb4/255,0x8c/255,1};
Color["棕红"] = {0xb2/255,0x22/255,0x22/255,1};
Color["红色"] = {1,0,0,1};
Color["浅红"] = {1,0x34/255,0x1c/255,1};
Color["橘红"] = {1,0x7f/255,0x50/255,1};
Color["肉色"] = {0xfa/255,0x80/255,0x72/255,1};
Color["粉红"] = {1,0x69/255,0xb4/255,1};
Color["紫红"] = {0xa0/255,0x20/255,0xf0/255,1};
Color["紫色"] = {0xee/255,0x82/255,0xee/255,1};
Color["蓝紫"] = {0xb0/255,0x30/255,0x60/255,1};
Color["紫褐"] = {1, 0, 1, 1};

--- 品质对应的色彩
quality_colors = {}
quality_colors[11] = Color["浅灰"]
quality_colors[10] = Color["白色"]
quality_colors[9] = Color["绿色"]
quality_colors[8] = Color["浅蓝"]
quality_colors[7] = Color["天蓝"]
quality_colors[6] = Color["青色"]
quality_colors[5] = Color["金色"]
quality_colors[4] = Color["橙色"]
quality_colors[3] = Color["粉红"]
quality_colors[2] = Color["紫色"]
quality_colors[1] = Color["紫红"]

init_color = {1,1,1,1}
text_style = {}
text_style['q11'] = quality_colors[11]
text_style['q10'] = quality_colors[10]
text_style['q9'] = quality_colors[9]
text_style['q8'] = quality_colors[8]
text_style['q7'] = quality_colors[7]
text_style['q6'] = quality_colors[6]
text_style['q5'] = quality_colors[5]
text_style['q4'] = quality_colors[4]
text_style['q3'] = quality_colors[3]
text_style['q2'] = quality_colors[2]
text_style['q1'] = quality_colors[1]
text_style.font56 = assets.font.myfont(56)
text_style.font48 = assets.font.myfont(48)
text_style.font32 = assets.font.myfont(32)
text_style.font28 = assets.font.myfont(28)
text_style.font24 = assets.font.myfont(24)
text_style.font20 = assets.font.myfont(20)
text_style.font18 = assets.font.myfont(18)





--- 品质对应名称
quality_labels = {}
quality_labels[11] = '【次品】'
quality_labels[10] = '【下十品】'
quality_labels[9] = '【中九品】'
quality_labels[8] = '【上八品】'
quality_labels[7] = '【优七品】'
quality_labels[6] = '【秘六品】'
quality_labels[5] = '【奇五品】'
quality_labels[4] = '【极四品】'
quality_labels[3] = '【超三品】'
quality_labels[2] = '【绝二品】'
quality_labels[1] = '【天一品】'

--- 绘制
--- @type func love.graphics.rectangleArcPanel
function love.graphics.rectangleArcPanel(x,y,w,h,r,line_width,line_color,panel_color)
    local line_width = line_width or 2
    local r = r or 10
    local line_color = line_color or {0.8,0.8,0.8}
    local panel_color = panel_color or {0.3,0.3,0.3,1}
    local init_color = {1,1,1,1}
    local PI = math.pi
    love.graphics.setLineWidth(line_width)
    love.graphics.setColor(panel_color)
    love.graphics.rectangle('fill',x,y,w,h,r * 2)
    love.graphics.setColor(line_color)
    love.graphics.line(x + r,y,x + w - r,y)
    love.graphics.line(x + r,y + h,x + w - r,y + h)
    love.graphics.line(x,y + r,x,y + h - r)
    love.graphics.line(x + w,y + r,x + w,y + h - r)

    love.graphics.arc('line','open',x,y,r,0,PI/2)
    love.graphics.arc('line','open',x + w,y,r,PI/2,PI)
    love.graphics.arc('line','open',x + w,y + h,r,PI,PI + PI/2)
    love.graphics.arc('line','open',x,y + h,r,PI + PI/2,PI * 2)

    love.graphics.setColor(1,1,1,0.3)
    love.graphics.setLineWidth(1)
    love.graphics.line(x + r,y + 43,x + w - r,y + 43)
    love.graphics.setColor(init_color)
end

function objInfoText(info,font,w,margin,line_height)
    local text = love.graphics.newText(font)

    local q = 'q' .. tostring(info.quality)
    local r,line_h = margin or 16,line_height or 22
    local w = w - r * 2
    if info.name then
        text:addf({text_style[q],info.name},w,'center',r,0)
    end
    if info.quality then
        text:addf({text_style[q],quality_labels[info.quality]},w,'center',r,line_h)
    end
    --- 根据内容
    local des_index = 0
    local des_h = 0
    if info.des then
        des_index = text:addf({text_style['q11'],info.des},w,'left',r,line_h * 2)
        des_h = text:getHeight(des_index)
    end
    --- 直接控制
    --local des_h = 2 * line_h
    --- items number
    local i = 3
    if info then
        text:addf({Color["橘黄"],"【道具类型】"},w,'left',r,line_h * i + des_h)
    end
    if info.type then
        i = i + 1
        text:addf({Color["棕灰"],"-类别：",Color["浅灰"],info.type},w,'left',r,line_h * i + des_h)
    end
    if info.material then
        i = i + 1
        text:addf({Color["棕灰"],"-材质：",Color["浅灰"],info.material},w,'left',r,line_h * i + des_h)
    end
    if info.dur then
        i = i + 1
        text:addf({Color["棕灰"],"-耐久：",Color["红色"],info.dur,Color["棕灰"]," / ",Color["白色"],info.dur_max,Color["浅灰"]," (无法修复) "},w,'left',r,line_h * i + des_h)
    end
    if info.weight then
        i = i + 1
        text:addf({Color["棕灰"],"-重量：",Color["浅灰"],info.weight},w,'left',r,line_h * i + des_h)
    end
    if info.update then
        i = i + 1
        text:addf({Color["浅灰"],"-无法精制"},w,'left',r,line_h * i + des_h)
    end
    if info then
        i = i + 1
        text:addf({Color["橘黄"],"【使用效果】"},w,'left',r,line_h * i + des_h)
    end
    local color = Color["浅灰"]
    if info.use then
        i = i + 1
        if  info.use:find("+") then
            color = Color["绿色"]
        elseif info.use:find("-") then
            color = Color["红色"]
        end
        if info.use_type then
            --i = i + 1
            text:addf({Color["浅灰"],"-"..info.use_type .. "：",color,info.use},w,'left',r,line_h * i + des_h)
        end
    end

    if info.value then
        i = i + 5
        text:addf({text_style["q10"],"价值 ",text_style["q5"],info.value},w,'right',r,line_h * i)
    end
    local max_height = line_h * (i + 1)
    return text,max_height
end

function gongFaInfoText(info,font,margin,line_height)
    local text = love.graphics.newText(font)

    local q = 'q' .. tostring(info.quality)
    local r,line_h = margin or 16,line_height or 22
    local w = w - r * 2

    text:addf({text_style[q],info.name},w,'center',r,0)
    text:addf({text_style[q],quality_labels[info.quality]},w,'center',r,line_h)
    --- 根据内容
    local des_index = text:addf({text_style['q11'],info.des},w,'left',r,line_h * 2)
    local des_h = text:getHeight(des_index)
    --- 直接控制
    --local des_h = 2 * line_h
    text:addf({Color["橘黄"],"【功法类型】"},w,'left',r,line_h * 3 + des_h)
    text:addf({Color["棕灰"],"-类别：",Color["浅灰"],info.type},w,'left',r,line_h * 4 + des_h)
    text:addf({Color["棕灰"],"-材质：",Color["浅灰"],info.material},w,'left',r,line_h * 5 + des_h)
    text:addf({Color["棕灰"],"-耐久：",Color["红色"],info.dur,Color["棕灰"]," / ",Color["白色"],info.dur_max,Color["浅灰"]," (无法修复) "},w,'left',r,line_h * 6 + des_h)
    text:addf({Color["棕灰"],"-重量：",Color["浅灰"],info.weight},w,'left',r,line_h * 7 + des_h)
    text:addf({Color["浅灰"],"-无法精制"},w,'left',r,line_h * 8 + des_h)

    text:addf({Color["橘黄"],"【装备效果】"},w,'left',r,line_h * 10 + des_h)
    local color = Color["浅灰"]
    if  info.use:find("+") then
        color = Color["绿色"]
    elseif info.use:find("-") then
        color = Color["红色"]
    end
    text:addf({Color["浅灰"],"-"..info.use_type .. "：",color,info.use},w,'left',r,line_h * 11 + des_h)
    text:addf({text_style["q10"],"价值 ",text_style["q5"],info.value},w,'right',r,line_h * 17)
   --- 输出最大高度，方便绘制背景面板大小
    local max_height = line_h * 20
    return text,max_height
end

function infoText(info,font,margin,line_height)
    if info.type == "物品" then
        return objInfoText(info,font,margin,line_height)
    elseif info.type == "功法" then
        return objInfoText(info,font,margin,line_height)
    end
        return error("can not find info func")
end